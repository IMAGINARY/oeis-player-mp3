{"version":3,"file":"default.css","sources":["default.scss","fonts/quicksand.scss","common/_colors.scss","common/_fonts.scss","common/_util_responsive.scss","common/_base.scss","components/_mod_btngroup.scss","components/_mod_player.scss","components/_mod_loader.scss"],"sourcesContent":["@import \"fonts/quicksand\";\n@import \"common/colors\";\n@import \"common/fonts\";\n@import \"common/util_responsive\";\n@import \"common/base\";\n\n@import \"components/mod_btngroup\";\n@import \"components/mod_player\";\n@import \"components/mod_loader\";","/* quicksand-regular - latin */\n@font-face {\n    font-family: 'Quicksand';\n    font-style: normal;\n    font-weight: 400;\n    src: url('../../vendor/quicksand/quicksand-v9-latin-regular.eot'); /* IE9 Compat Modes */\n    src: local('Quicksand Regular'), local('Quicksand-Regular'),\n    url('../../vendor/quicksand/quicksand-v9-latin-regular.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */\n    url('../../vendor/quicksand/quicksand-v9-latin-regular.woff2') format('woff2'), /* Super Modern Browsers */\n    url('../../vendor/quicksand/quicksand-v9-latin-regular.woff') format('woff'), /* Modern Browsers */\n    url('../../vendor/quicksand/quicksand-v9-latin-regular.ttf') format('truetype'), /* Safari, Android, iOS */\n    url('../../vendor/quicksand/quicksand-v9-latin-regular.svg#Quicksand') format('svg'); /* Legacy iOS */\n}\n/* quicksand-700 - latin */\n@font-face {\n    font-family: 'Quicksand';\n    font-style: normal;\n    font-weight: 700;\n    src: url('../../vendor/quicksand/quicksand-v9-latin-700.eot'); /* IE9 Compat Modes */\n    src: local('Quicksand Bold'), local('Quicksand-Bold'),\n    url('../../vendor/quicksand/quicksand-v9-latin-700.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */\n    url('../../vendor/quicksand/quicksand-v9-latin-700.woff2') format('woff2'), /* Super Modern Browsers */\n    url('../../vendor/quicksand/quicksand-v9-latin-700.woff') format('woff'), /* Modern Browsers */\n    url('../../vendor/quicksand/quicksand-v9-latin-700.ttf') format('truetype'), /* Safari, Android, iOS */\n    url('../../vendor/quicksand/quicksand-v9-latin-700.svg#Quicksand') format('svg'); /* Legacy iOS */\n}","$color-black-real: #000;\n$color-white-real: #fff;\n\n$color-black: $color-black-real;\n$color-white: $color-white-real;\n\n$color-gray: #6c757d;","$font-stack-quicksand: Quicksand, Helvetica, Arial, sans-serif;\n\n@mixin quicksand {\n  font-family: $font-stack-quicksand;\n  font-weight: 400;\n  font-style: normal;\n  letter-spacing: normal;\n}\n\n@mixin quicksandBold {\n  font-family: $font-stack-quicksand;\n  font-weight: bold;\n  font-style: normal;\n  letter-spacing: normal;\n}\n","// Grid breakpoints\n//\n// Define the minimum dimensions at which your layout will change,\n// adapting to different screen sizes, for use in media queries.\n\n\n$grid-breakpoints: (\n    xs: 0,\n    sm: 576px,\n    md: 768px,\n    lg: 992px,\n    xl: 1200px\n) !default;\n\n// Grid containers\n//\n// Define the maximum width of `.container` for different screen sizes.\n\n$container-max-widths: (\n    sm: 540px,\n    md: 720px,\n    lg: 960px,\n    xl: 1140px\n) !default;\n\n// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n  @return if($next, breakpoint-min($next, $breakpoints) - .02px, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash infront.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n","body {\n  font-size: 1.5rem;\n}\n\n#main {\n  padding: 30px 20px;\n}\n",".btn-group {\n  .btn {\n    @include quicksandBold;\n    font-size: 1.1rem;\n    border-radius: 1.15rem;\n    background-color: $color-gray;\n    border-color: $color-gray;\n\n    &:first-child {\n      padding-left: 1.1em;\n    }\n\n    &:last-child {\n      padding-right: 1.1em;\n    }\n  }\n\n  .btn-secondary:not(:disabled):not(.disabled).active:focus,\n  .btn-secondary:not(:disabled):not(.disabled):active:focus,\n  .show>.btn-secondary.dropdown-toggle:focus {\n    box-shadow: none;\n  }\n\n  .btn-secondary.disabled, .btn-secondary:disabled {\n    background-color: $color-gray;\n    opacity: 1;\n    color: #9ba2a9;\n  }\n\n  .btn-secondary:not(:disabled):not(.disabled).active,\n  .btn-secondary:not(:disabled):not(.disabled):active {\n    background-color: $color-black;\n    border-color: $color-black;\n  }\n}\n\n.btn-group-speed {\n  display: block;\n  margin-bottom: 0.6em;\n  .btn {\n    min-width: 4em;\n  }\n}",".song_info {\n  @include quicksand;\n  margin-bottom: 1.6em;\n  line-height: 1.3;\n}\n\n.song_info-field-id {\n}\n\n.song_info-field-title {\n  font-weight: bold;\n  font-size: 2.5em;\n  line-height: 0.9;\n  margin-left: -0.05em;\n  margin-bottom: 0.4em;\n}\n\n.song_info-field-terms {\n  margin-bottom: 0.5em;\n}\n\n.song_info-field-description {\n\n}\n\n.control-button-l {\n  width: 100%;\n  height: 0;\n  padding-bottom: 100%;\n  vertical-align: top;\n  border-radius: 50%;\n  display: inline-block;\n  position: relative;\n  border: none;\n  background-color: $color-black;\n  background-repeat: no-repeat;\n  background-position: 50% center;\n  background-size: 45%;\n  color: $color-white;\n\n  &:focus {\n    outline: none;\n  }\n\n  &.disabled {\n    opacity: 0.5;\n    background-image: none !important;\n  }\n}\n\n.control-play {\n  background-image: url('../img/fa/play-solid.svg');\n  background-position: 59% center;\n\n  &.playing {\n    background-image: url('../img/fa/stop-solid.svg');\n    background-position: 50% center;\n  }\n\n  /* preloader */\n  &:after {\n    content: \" \";\n    display: block;\n    width: 0;\n    height: 0;\n    pointer-events: none;\n    position: absolute;\n    top: 0;\n    left: 0;\n    background-image: url('../img/fa/stop-solid.svg');\n  }\n\n  &:before {\n    content: \" \";\n    display: block;\n    width: 0;\n    height: 0;\n    pointer-events: none;\n    position: absolute;\n    top: 0;\n    left: 0;\n    background-image: url('../img/fa/play-solid.svg');\n  }\n}\n\n.control-button-l {\n  .control-button-loader {\n    display: block;\n    position: absolute;\n    top: 10%;\n    left: 10%;\n    width: 80%;\n    height: 80%;\n    opacity: 0.6;\n  }\n}\n\n.control-rewind {\n  background-image: url('../img/fa/fast-backward-solid.svg');\n}\n\n.speed-field {\n  input[type=range] {\n    width: 300px;\n  }\n}\n\n.meter {\n  @include quicksand;\n  font-weight: bold;\n  font-size: 1.5em;\n}\n",".loader {\n  .spinner-border {\n    width: 5em;\n    height: 5em;\n    border-width: 0.35em;\n    -webkit-animation: spinner-border 1.2s linear infinite;\n    animation: spinner-border 1.2s linear infinite;\n  }\n}"],"names":[],"mappings":"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"}